[tool.poetry]
name = "lcli"
version = "0.1.0"
description = "Local CLI is an extendable interactive command line tool built in mind with the objective to make the interaction with day to day scripts more user friendly. The scripts you use daily should be easy to maintain, develop and document so you don't need to worry to write long documents on how to use them."

license = "MIT"

authors = [
    "George Babarus <george.babarus@gmail.com>"
]

readme = 'README.md'  # Markdown files are supported

repository = "https://github.com/a42ss/lcli"
homepage = "https://github.com/a42ss/lcli"

keywords = ['cli', 'documentation', 'automation', 'local', 'command', 'command-line', 'script', 'scripts', 'command-line-tool', 'automation-framework']

[tool.poetry.dependencies]
python = "^3.7"

fire = { version = "^0.4" }
pinject = { version = "^0.14" }
prompt-toolkit = { version = "^3.0" }
PyYAML = { version = "^6.0" }
types-PyYAML = "*"
jsonschema = { version = "^4.5" }
pyfiglet = { version = "^0.8" }
blessings = { version = "^1.7" }

[tool.poetry.dev-dependencies]

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinxcontrib-httpdomain = "*"
sphinx_rtd_theme = "*"
recommonmark = "*"
m2r = "*"

[tool.poetry.group.build.dependencies]
poetry = "^1.2"
poetry2setup = "^1.0.0"
toml = "*"

# Build tools
build = "*"
twine = "*"
invoke = "*"
pipreqs = "*"
flake8 = "*"
isort = "*"
black = "*"
mypy = "*"
bandit = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
mock = "*"
coverage = {extras = ["toml"], version = "^6.4.4"}

[tool.poetry.group.poetry.dependencies]
poetry = "^1.2"
poetry2setup = "^1.0.0"

[tool.coverage.run]
relative_files = true

[tool.poetry.scripts]
ltest = 'lcli.__main__:main'

[tool.poetry.plugins]

[tool.bandit]
exclude = "src/test"
skips = ["B602", "B605", "B603", "B301", "B403", "B404"]

[virtualenvs]
create = true
in-project = true